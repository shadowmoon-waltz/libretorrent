apply plugin: 'com.android.application'

boolean signConfigExists = project.hasProperty("keystoreFile") && project.hasProperty("keystorePassword") && project.hasProperty("keystoreAlias") && project.hasProperty("keystoreAliasPassword")

android {
    if (signConfigExists) {
        signingConfigs {
            release {
                storeFile file(project.property("keystoreFile"))
                storePassword project.property("keystorePassword")
                keyAlias project.property("keystoreAlias")
                keyPassword project.property("keystoreAliasPassword")
            }
        }
    }

    compileSdkVersion 29
    defaultConfig {
        applicationId "org.proninyaroslav.libretorrent"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 17
        /*
         * Convection:
         *  major.minor.[revision][-some_info]
         */
        versionName "2.1"
        vectorDrawables.useSupportLibrary true
        multiDexEnabled true

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        /* Enable or disable logging in build types */
        def SESSION_LOGGING = "SESSION_LOGGING"

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField("boolean", SESSION_LOGGING, "false")

            if(signConfigExists) {
                signingConfig signingConfigs.release
            }
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"
            testCoverageEnabled true
            debuggable true

            buildConfigField("boolean", SESSION_LOGGING, "true")
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            universalApk true
        }
    }

    project.ext.versionCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2, 'x86': 3, 'x86_64': 4]
    applicationVariants.all { variant ->
        outputs.all { output ->
            versionCodeOverride =
                    project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) * 1000000 + versionCode
        }
    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    buildFeatures {
        dataBinding true
    }

    testOptions {
        unitTests {
            includeAndroidResources true
        }
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}

def ROOM_VERSION = "2.2.5"

dependencies {
    /* Testing */
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "androidx.room:room-testing:$ROOM_VERSION"
    testAnnotationProcessor "com.google.auto.service:auto-service:1.0-rc7"

    /* AndroidX libraries */
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.fragment:fragment:1.2.5"
    implementation "androidx.lifecycle:lifecycle-livedata-core:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.2.0"
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.paging:paging-runtime:2.1.2"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0-rc03'
    implementation "androidx.room:room-rxjava2:$ROOM_VERSION"
    implementation "androidx.room:room-runtime:$ROOM_VERSION"
    annotationProcessor "androidx.room:room-compiler:$ROOM_VERSION" /* For schemas import */
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "androidx.work:work-runtime:2.4.0"
    implementation "com.google.android.material:material:1.2.1"

    /* ReactiveX */
    implementation "io.reactivex.rxjava2:rxjava:2.2.19"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    /* libtorrent wrapper */
    def LIBTORRENT4J_VERSION = "2.0.1-7"
    implementation "org.libtorrent4j:libtorrent4j:$LIBTORRENT4J_VERSION"
    implementation "org.libtorrent4j:libtorrent4j-android-arm:$LIBTORRENT4J_VERSION"
    implementation "org.libtorrent4j:libtorrent4j-android-arm64:$LIBTORRENT4J_VERSION"
    implementation "org.libtorrent4j:libtorrent4j-android-x86:$LIBTORRENT4J_VERSION"
    implementation "org.libtorrent4j:libtorrent4j-android-x86_64:$LIBTORRENT4J_VERSION"

    /* Other */
    implementation "net.cachapa.expandablelayout:expandablelayout:2.9.2"
    implementation "com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:1.0.0"
    implementation "com.github.anthonynsimon:jurl:v0.4.2"
    implementation "com.jaredrummler:colorpicker:1.1.0"
    /* Don't use Commons IO >= 2.6, because they uses Java NIO, supported only from API 26 */
    //noinspection GradleDependency
    implementation "commons-io:commons-io:2.5"
    implementation "org.apache.commons:commons-text:1.9"
    implementation "com.google.code.gson:gson:2.8.6"
    implementation "com.takisoft.preferencex:preferencex:1.1.0"
    implementation "com.leinardi.android:speed-dial:3.1.1"
    implementation "net.java.dev.jna:jna:5.6.0@aar"
}
